service: aquarius
frameworkVersion: "2"

plugins:
  - serverless-offline
  - serverless-prune-plugin
  - serverless-python-requirements

custom:
  serverless-offline:
    httpPort: 5000
  prune:
    automatic: true
    number: 1
  pythonRequirements:
    dockerizePip: false


provider:
  name: aws
  runtime: python3.8
  lambdaHashingVersion: '20201221'
  httpApi:
    cors: true
  environment:
    AWS_ACCESS_KEY: ${{ secrets.AWS_S3_BUCKET }}
    AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    AWS_REGION: ${{ secrets.AWS_REGION }}
    SLS_DEBUG: *

functions:
  putJob:
    handler: handlers.job.put_job
    events:
      - httpApi:
          path: /api/job
          method: post

  updateJob:
    handler: handlers.job.update_job
    events:
      - httpApi:
          path: /api/job/{id}
          method: put

  updateJobStatus:
    handler: handlers.job.update_job_status
    events:
      - httpApi:
          path: /api/job/{id}/status
          method: put

  getJobs:
    handler: handlers.job.get_job
    events:
      - httpApi:
          path: /api/job
          method: get

  getJob:
    handler: handlers.job.get_job_by_id
    events:
      - httpApi:
          path: /api/job/{id}
          method: get

  deleteJob:
    handler: handlers.job.delete_job
    events:
      - httpApi:
          path: /api/job/{id}
          method: delete

  parseRss:
    handler: handlers.url_parser.rss_parser